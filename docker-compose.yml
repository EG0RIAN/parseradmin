version: '3.8'

services:
  web:
    image: python:3.9-slim
    container_name: django_web
    restart: always
    command: gunicorn parceradmin.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    working_dir: /app
    networks:
      - webnet

  db:
    image: postgres:13
    container_name: postgres_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - webnet

  redis:
    image: redis:6
    container_name: redis
    restart: always
    networks:
      - webnet

  celery:
    image: python:3.9-slim
    container_name: celery_worker
    restart: always
    volumes:
      - .:/app
    env_file:
      - .env
    command: celery -A parceradmin worker --loglevel=info
    depends_on:
      - redis
      - db
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    working_dir: /app
    networks:
      - webnet

  celery-beat:
    image: python:3.9-slim
    container_name: celery_beat
    restart: always
    volumes:
      - .:/app
    env_file:
      - .env
    command: celery -A parceradmin beat --loglevel=info
    depends_on:
      - redis
      - db
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    working_dir: /app
    networks:
      - webnet

networks:
  webnet:

volumes:
  postgres_data:
